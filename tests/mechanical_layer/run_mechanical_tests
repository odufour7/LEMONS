#!/bin/bash

# Copyright  2025  Institute of Light and Matter, CNRS UMR 5306, University Claude Bernard Lyon 1
# Contributors: Oscar DUFOUR, Maxime STAPELLE, Alexandre NICOLAS

# This software is a computer program designed to generate a realistic crowd from anthropometric data and
# simulate the mechanical interactions that occur within it and with obstacles.

# This software is governed by the CeCILL-B license under French law and abiding by the rules of distribution
# of free software.  You can  use, modify and/ or redistribute the software under the terms of the CeCILL-B
# license as circulated by CEA, CNRS and INRIA at the following URL "http://www.cecill.info".

# As a counterpart to the access to the source code and  rights to copy, modify and redistribute granted by
# the license, users are provided only with a limited warranty  and the software's author,  the holder of the
# economic rights,  and the successive licensors  have only  limited liability.

# In this respect, the user's attention is drawn to the risks associated with loading,  using,  modifying
# and/or developing or reproducing the software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also therefore means  that it is reserved
# for developers  and  experienced professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their requirements in conditions enabling
# the security of their systems and/or data to be ensured and,  more generally, to use and operate it in the
# same conditions as regards security.

# The fact that you are presently reading this means that you have had knowledge of the CeCILL-B license and that
# you accept its terms.

# Ask user for ffmpeg path
read -p "Enter the full path to ffmpeg: " ffmpeg_path

# Get the absolute path to current directory
root_dir="$(pwd)"

# Process each immediate subdirectory
for dir in test_*/ ; do
    # Remove trailing slash
    dir="${dir%/}"
    # Only process directories
    if [ -d "$dir" ]; then
        echo "Processing directory: $dir"
        cd "$root_dir/$dir" || { echo "Cannot enter $dir"; exit 1; }

        uv run python ./run_simulation.py
        uv run python ./run_video.py --ffmpeg="$ffmpeg_path"

        cd "$root_dir"
    fi
done

# Ensure movies directory exists
mkdir -p "$root_dir/movies"

# Remove all files in ./movies/
echo "Cleaning $root_dir/movies/"
rm -f "$root_dir/movies/"*

# Copy .mov video from each ./directory/movies/ to ./movies/
for dir in test_*/ ; do
    dir="${dir%/}"
    movie_dir="$root_dir/$dir/movies"
    if [ -d "$movie_dir" ]; then
        # Find first .mov file in the movie_dir
        mov_file=$(find "$movie_dir" -maxdepth 1 -type f -name '*.mov' | head -n 1)
        if [ -n "$mov_file" ]; then
            cp "$mov_file" "$root_dir/movies/"
            echo "Copied $(basename "$mov_file") from $dir/movies/ to movies/"
        else
            echo "No .mov file found in $dir/movie/"
        fi
    fi
done

echo "All done."
