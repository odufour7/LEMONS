fail_fast: false # Continue running other hooks even if one fails
repos:
  # Ruff: Linter and Formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.7
    hooks:
      - id: ruff
        args: ["--fix"] # Automatically fix issues where possible
        types_or: ["python", "pyi"]
      # Formatting with Ruff
      - id: ruff-format

  # Codespell: Spell checker
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        args:
          - --skip=*.js,*.html,*.css,*.pdf,*.png,*.csv,*.pkl,*.json,*.xml
          - --ignore-words-list=teh,fo,bar
        files: '\.(py|md|c|cpp|h|hpp)$'

  # Mypy: Static type checker (local hook)
  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: mypy --strict
        language: python
        types: ["python"]
        files: "\\.py$"

  # Numpydoc Validation: Ensure docstring compliance
  - repo: https://github.com/numpy/numpydoc
    rev: v1.8.0
    hooks:
      - id: numpydoc-validation
        files: ^src/.*\.py$

  # # Test of Jupyter notebooks
  # - repo: local
  #   hooks:
  #     - id: nbmake
  #       name: jupyter-notebooks
  #       entry: uv run pytest --nbmake tutorials/shapes_configuration/
  #       language: system # Use 'system' to run the command directly
  #       pass_filenames: false # Don't pass filenames from pre-commit, since you specify the directory
  #       always_run: true # Run this hook on every commit, even if no notebooks changed
  #       files: ^tutorials/shapes_configuration/.*\.ipynb$ # Restrict to this directory

  # Test of python functions
  - repo: local
    hooks:
      - id: uv-pytest
        name: pytest
        entry: uv run pytest
        language: system # Use 'system' to run the command directly
        pass_filenames: false
        always_run: true
        types: ["python"]

  # Cppcheck: C++ static analysis
  - repo: https://github.com/pocc/pre-commit-hooks
    rev: v1.3.5
    hooks:
      - id: clang-format
        args: [--style=file]
      - id: clang-tidy
        args: [-p=src/mechanical_layer/build]
      - id: cpplint
        args: [--filter=-runtime/string]
        exclude: src/mechanical_layer/3rdparty/tinyxml/tinyxml2\.(h|cpp)$

  # Doxygen: Documentation generator
  - repo: local
    hooks:
      - id: check-doxygen
        name: check-doxygen
        entry: ./check-doxygen.sh
        files: \.(h|hpp|cpp|c)$
        language: system
        pass_filenames: false
