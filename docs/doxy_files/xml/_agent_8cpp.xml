<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_agent_8cpp" kind="file" language="C++">
    <compoundname>Agent.cpp</compoundname>
    <includes refid="_agent_8h" local="yes">Agent.h</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="17">
        <label>../3rdparty/tinyxml/tinyxml2.h</label>
      </node>
      <node id="2">
        <label>Agent.h</label>
        <link refid="_agent_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Global.h</label>
        <link refid="_global_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/src/Agent.cpp</label>
        <link refid="_agent_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>algorithm</label>
      </node>
      <node id="9">
        <label>cmath</label>
      </node>
      <node id="10">
        <label>filesystem</label>
      </node>
      <node id="11">
        <label>fstream</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>list</label>
      </node>
      <node id="14">
        <label>map</label>
      </node>
      <node id="15">
        <label>sstream</label>
      </node>
      <node id="16">
        <label>string</label>
      </node>
      <node id="7">
        <label>sys/stat.h</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/><sp/>2025<sp/><sp/>Institute<sp/>of<sp/>Light<sp/>and<sp/>Matter,<sp/>CNRS<sp/>UMR<sp/>5306</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Contributors:<sp/>Oscar<sp/>DUFOUR,<sp/>Maxime<sp/>STAPELLE,<sp/>Alexandre<sp/>NICOLAS</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>software<sp/>is<sp/>a<sp/>computer<sp/>program<sp/>designed<sp/>to<sp/>generate<sp/>a<sp/>realistic<sp/>crowd<sp/>from<sp/>anthropometric<sp/>data<sp/>and</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>simulate<sp/>the<sp/>mechanical<sp/>interactions<sp/>that<sp/>occur<sp/>within<sp/>it<sp/>and<sp/>with<sp/>obstacles.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>software<sp/>is<sp/>governed<sp/>by<sp/>the<sp/>CeCILL<sp/><sp/>license<sp/>under<sp/>French<sp/>law<sp/>and<sp/>abiding<sp/>by<sp/>the<sp/>rules<sp/>of<sp/>distribution</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>free<sp/>software.<sp/><sp/>You<sp/>can<sp/><sp/>use,<sp/>modify<sp/>and/<sp/>or<sp/>redistribute<sp/>the<sp/>software<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>CeCILL</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>license<sp/>as<sp/>circulated<sp/>by<sp/>CEA,<sp/>CNRS<sp/>and<sp/>INRIA<sp/>at<sp/>the<sp/>following<sp/>URL<sp/>&quot;http://www.cecill.info&quot;.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>As<sp/>a<sp/>counterpart<sp/>to<sp/>the<sp/>access<sp/>to<sp/>the<sp/>source<sp/>code<sp/>and<sp/><sp/>rights<sp/>to<sp/>copy,<sp/>modify<sp/>and<sp/>redistribute<sp/>granted<sp/>by</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>license,<sp/>users<sp/>are<sp/>provided<sp/>only<sp/>with<sp/>a<sp/>limited<sp/>warranty<sp/><sp/>and<sp/>the<sp/>software&apos;s<sp/>author,<sp/><sp/>the<sp/>holder<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>economic<sp/>rights,<sp/><sp/>and<sp/>the<sp/>successive<sp/>licensors<sp/><sp/>have<sp/>only<sp/><sp/>limited<sp/>liability.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>In<sp/>this<sp/>respect,<sp/>the<sp/>user&apos;s<sp/>attention<sp/>is<sp/>drawn<sp/>to<sp/>the<sp/>risks<sp/>associated<sp/>with<sp/>loading,<sp/><sp/>using,<sp/><sp/>modifying</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>and/or<sp/>developing<sp/>or<sp/>reproducing<sp/>the<sp/>software<sp/>by<sp/>the<sp/>user<sp/>in<sp/>light<sp/>of<sp/>its<sp/>specific<sp/>status<sp/>of<sp/>free<sp/>software,</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>that<sp/>may<sp/>mean<sp/><sp/>that<sp/>it<sp/>is<sp/>complicated<sp/>to<sp/>manipulate,<sp/><sp/>and<sp/><sp/>that<sp/><sp/>also<sp/>therefore<sp/>means<sp/><sp/>that<sp/>it<sp/>is<sp/>reserved</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>developers<sp/><sp/>and<sp/><sp/>experienced<sp/>professionals<sp/>having<sp/>in-depth<sp/>computer<sp/>knowledge.<sp/>Users<sp/>are<sp/>therefore</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>encouraged<sp/>to<sp/>load<sp/>and<sp/>test<sp/>the<sp/>software&apos;s<sp/>suitability<sp/>as<sp/>regards<sp/>their<sp/>requirements<sp/>in<sp/>conditions<sp/>enabling</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>security<sp/>of<sp/>their<sp/>systems<sp/>and/or<sp/>data<sp/>to<sp/>be<sp/>ensured<sp/>and,<sp/><sp/>more<sp/>generally,<sp/>to<sp/>use<sp/>and<sp/>operate<sp/>it<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>same<sp/>conditions<sp/>as<sp/>regards<sp/>security.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>fact<sp/>that<sp/>you<sp/>are<sp/>presently<sp/>reading<sp/>this<sp/>means<sp/>that<sp/>you<sp/>have<sp/>had<sp/>knowledge<sp/>of<sp/>the<sp/>CeCILL<sp/>license<sp/>and<sp/>that</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>you<sp/>accept<sp/>its<sp/>terms.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>Agent.cpp<sp/>contains<sp/>the<sp/>constructor<sp/>of<sp/>the<sp/>agent<sp/>class,<sp/>as<sp/>well<sp/>as<sp/>functions<sp/>related<sp/>to<sp/>the<sp/>agent&apos;s<sp/>properties.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Agent.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::vector;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(DOXYGEN_SHOULD_SKIP_THIS)</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>size_body(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double2&gt;&amp;<sp/>delta_gtos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;double&gt;&amp;<sp/>radius_shapes)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_delta_gtos<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cpt_max<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>delta_gtos.size();<sp/>++i)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>magnitude<sp/>=<sp/>!delta_gtos[i];<sp/>magnitude<sp/>&gt;<sp/>max_delta_gtos)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_delta_gtos<sp/>=<sp/>magnitude;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cpt_max<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>radius(radius_shapes[cpt_max]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(radius_shapes[cpt_max]<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius<sp/>=<sp/>-radius_shapes[cpt_max];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>radius<sp/>+<sp/>max_delta_gtos;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="struct_agent_1a63914b2d78836a941fcf53047d71ed29" kindref="member">Agent::Agent</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>ID,<sp/>std::vector&lt;unsigned&gt;<sp/>Ids_shapes,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nb_shapes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double2&gt;&amp;<sp/>delta_gtos,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;double&gt;&amp;<sp/>radius_shapes,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta_body_init,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>moi)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>_id(ID),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_mass(mass),</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_moi(moi),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_ids_shapes(std::move(Ids_shapes)),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_radius(size_body(delta_gtos,<sp/>radius_shapes)),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_nb_shapes(nb_shapes),</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_delta_gtos(delta_gtos),</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_radius_shapes(radius_shapes),</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_theta_init(theta_body_init)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><ref refid="struct_agent_1ab8dd8d152605cf1339fed595376e83cb" kindref="member">Agent::~Agent</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_agent_1a8213096130b009ee5d233d1e60d4442d" kindref="member">Agent::move</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_agent_1ae5fec6c2d045136730900c8fa2f1d6ee" kindref="member">_x</ref><sp/>+=<sp/><ref refid="struct_agent_1a40d332f56eb301d0f2fd80933b6c2461" kindref="member">_vx</ref><sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_agent_1a90bb0e29f517c3775a82b8ef3c15a37f" kindref="member">_y</ref><sp/>+=<sp/><ref refid="struct_agent_1ac4f2ef64b18ede184af2774563de62d8" kindref="member">_vy</ref><sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_agent_1aff31fb7e42339fb260af2a214d60a7a6" kindref="member">_theta</ref><sp/>+=<sp/><ref refid="struct_agent_1af1487c7f179e334239593bb162bf5cd0" kindref="member">_w</ref><sp/>*<sp/>dt;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">vector&lt;double2&gt;<sp/><ref refid="struct_agent_1a830bc76a5ef0ee8d42d46ec8fdcf0091" kindref="member">Agent::get_delta_gtos</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;double2&gt;<sp/>delta_gtos_abs;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>[x,<sp/>y]<sp/>:<sp/><ref refid="struct_agent_1a0ca4ccfa41d290d7b9806a0738ad3982" kindref="member">_delta_gtos</ref>)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rotation_angle<sp/>=<sp/><ref refid="struct_agent_1aff31fb7e42339fb260af2a214d60a7a6" kindref="member">_theta</ref><sp/>-<sp/><ref refid="struct_agent_1a7351fecebf368e76fa36139cc1e6b3ae" kindref="member">_theta_init</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delta_gtos_abs.emplace_back(x<sp/>*<sp/>cos(rotation_angle)<sp/>-<sp/>y<sp/>*<sp/>sin(rotation_angle),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>*<sp/>sin(rotation_angle)<sp/>+<sp/>y<sp/>*<sp/>cos(rotation_angle));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>delta_gtos_abs;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/src/Agent.cpp"/>
  </compounddef>
</doxygen>
