<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_agent" kind="struct" language="C++" prot="public">
    <compoundname>Agent</compoundname>
    <includes refid="_agent_8h" local="no">Agent.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_agent_1a453331e293cdc1f5df8ff6e89cde6def" prot="public" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned Agent::_id</definition>
        <argsstring></argsstring>
        <name>_id</name>
        <qualifiedname>Agent::_id</qualifiedname>
        <briefdescription>
<para><ref refid="struct_agent" kindref="compound">Agent</ref> id. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="45" column="20" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a574623159c00a0a641fb380a8d7cd312" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Agent::_mass</definition>
        <argsstring></argsstring>
        <name>_mass</name>
        <qualifiedname>Agent::_mass</qualifiedname>
        <briefdescription>
<para>Mass. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="46" column="18" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a7af4908964668300dceb0e97deeac933" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Agent::_moi</definition>
        <argsstring></argsstring>
        <name>_moi</name>
        <qualifiedname>Agent::_moi</qualifiedname>
        <briefdescription>
<para>Moment of inertia. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="47" column="18" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a04ebfcac2b96192faed3ed25041441e2" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; unsigned &gt;</type>
        <definition>const std::vector&lt;unsigned&gt; Agent::_ids_shapes</definition>
        <argsstring></argsstring>
        <name>_ids_shapes</name>
        <qualifiedname>Agent::_ids_shapes</qualifiedname>
        <briefdescription>
<para>List of ids of the shapes of the agent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="48" column="23" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1ac0f2bb8aa434e847f264bd8051bbdc62" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Agent::_radius</definition>
        <argsstring></argsstring>
        <name>_radius</name>
        <qualifiedname>Agent::_radius</qualifiedname>
        <briefdescription>
<para>Equivalent radius for repulsive force. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="49" column="18" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a78f7a7a1101569400fec08c8412ccfdf" prot="public" static="no" mutable="no">
        <type>const unsigned</type>
        <definition>const unsigned Agent::_nb_shapes</definition>
        <argsstring></argsstring>
        <name>_nb_shapes</name>
        <qualifiedname>Agent::_nb_shapes</qualifiedname>
        <briefdescription>
<para>Number of shapes of the agent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="50" column="20" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a0ca4ccfa41d290d7b9806a0738ad3982" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double2 &gt;</type>
        <definition>std::vector&lt;double2&gt; Agent::_delta_gtos</definition>
        <argsstring></argsstring>
        <name>_delta_gtos</name>
        <qualifiedname>Agent::_delta_gtos</qualifiedname>
        <briefdescription>
<para>List of vector from the center of mass G to the center of each physical shape (disc) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="51" column="17" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a569f4d3e9c12a902f30f116892381c4b" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; double &gt;</type>
        <definition>const std::vector&lt;double&gt; Agent::_radius_shapes</definition>
        <argsstring></argsstring>
        <name>_radius_shapes</name>
        <qualifiedname>Agent::_radius_shapes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The radii of the agent&apos;s shapes </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="53" column="23" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a7351fecebf368e76fa36139cc1e6b3ae" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double Agent::_theta_init</definition>
        <argsstring></argsstring>
        <name>_theta_init</name>
        <qualifiedname>Agent::_theta_init</qualifiedname>
        <briefdescription>
<para>The initial value of the agent&apos;s orientation, derived from the relative positions of its shapes in the Agents XML file. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="55" column="18" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1ae5fec6c2d045136730900c8fa2f1d6ee" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_x</definition>
        <argsstring></argsstring>
        <name>_x</name>
        <qualifiedname>Agent::_x</qualifiedname>
        <briefdescription>
<para>x-component of the center of mass </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="56" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a90bb0e29f517c3775a82b8ef3c15a37f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_y</definition>
        <argsstring></argsstring>
        <name>_y</name>
        <qualifiedname>Agent::_y</qualifiedname>
        <briefdescription>
<para>y-component of the center of mass </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="57" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1aff31fb7e42339fb260af2a214d60a7a6" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_theta</definition>
        <argsstring></argsstring>
        <name>_theta</name>
        <qualifiedname>Agent::_theta</qualifiedname>
        <briefdescription>
<para>Orientation of the agent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="58" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a40d332f56eb301d0f2fd80933b6c2461" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_vx</definition>
        <argsstring></argsstring>
        <name>_vx</name>
        <qualifiedname>Agent::_vx</qualifiedname>
        <briefdescription>
<para>x-component of the velocity of the center of mass </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="59" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1ac4f2ef64b18ede184af2774563de62d8" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_vy</definition>
        <argsstring></argsstring>
        <name>_vy</name>
        <qualifiedname>Agent::_vy</qualifiedname>
        <briefdescription>
<para>y-component of the velocity of the center of mass </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="60" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1af1487c7f179e334239593bb162bf5cd0" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_w</definition>
        <argsstring></argsstring>
        <name>_w</name>
        <qualifiedname>Agent::_w</qualifiedname>
        <briefdescription>
<para>Angular velocity of the agent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="61" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1ae33a1855f9a37f246968f5be5e3eaa06" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_vx_des</definition>
        <argsstring></argsstring>
        <name>_vx_des</name>
        <qualifiedname>Agent::_vx_des</qualifiedname>
        <briefdescription>
<para>x-component of the desired velocity of the agent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="62" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1ab93d8f0f443321392144eb8392c63baa" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_vy_des</definition>
        <argsstring></argsstring>
        <name>_vy_des</name>
        <qualifiedname>Agent::_vy_des</qualifiedname>
        <briefdescription>
<para>y-component of the desired velocity of the agent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="63" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a9a22b9537f6f92ec7cd9c11b5bff5a5e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_w_des</definition>
        <argsstring></argsstring>
        <name>_w_des</name>
        <qualifiedname>Agent::_w_des</qualifiedname>
        <briefdescription>
<para>Desired angular velocity of the agent. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="64" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a8bdb8ef4e124ca48217cc5e42ad157f7" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Agent::_theta_des</definition>
        <argsstring></argsstring>
        <name>_theta_des</name>
        <qualifiedname>Agent::_theta_des</qualifiedname>
        <briefdescription>
<para>Desired orientation of the agent (orientation of the desired velocity) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="65" column="12" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a9489bdc6bf8961e95c9c33a145a317f0" prot="public" static="no" mutable="no">
        <type>double2</type>
        <definition>double2 Agent::_v_des</definition>
        <argsstring></argsstring>
        <name>_v_des</name>
        <qualifiedname>Agent::_v_des</qualifiedname>
        <briefdescription>
<para>Norm (N2) of the desired velocity. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="67" column="13" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a0698b175835cd15775fc9ff16e4add19" prot="public" static="no" mutable="no">
        <type>std::list&lt; unsigned &gt;</type>
        <definition>std::list&lt;unsigned&gt; Agent::_neighbours</definition>
        <argsstring></argsstring>
        <name>_neighbours</name>
        <qualifiedname>Agent::_neighbours</qualifiedname>
        <briefdescription>
<para>List of neighbours. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="68" column="15" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_agent_1a9be8318728b4f24366501ef3aa22c60b" prot="public" static="no" mutable="no">
        <type>std::list&lt; std::pair&lt; unsigned, unsigned &gt; &gt;</type>
        <definition>std::list&lt;std::pair&lt;unsigned, unsigned&gt; &gt; Agent::_neighbours_walls</definition>
        <argsstring></argsstring>
        <name>_neighbours_walls</name>
        <qualifiedname>Agent::_neighbours_walls</qualifiedname>
        <briefdescription>
<para>List of neighbouring walls. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="69" column="15" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_agent_1a63914b2d78836a941fcf53047d71ed29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Agent::Agent</definition>
        <argsstring>(unsigned ID, std::vector&lt; unsigned &gt; Ids_shapes, unsigned nb_shapes, const std::vector&lt; double2 &gt; &amp;delta_gtos, const std::vector&lt; double &gt; &amp;radius_shapes, double theta_body_init, double mass, double moi)</argsstring>
        <name>Agent</name>
        <qualifiedname>Agent::Agent</qualifiedname>
        <param>
          <type>unsigned</type>
          <declname>ID</declname>
        </param>
        <param>
          <type>std::vector&lt; unsigned &gt;</type>
          <declname>Ids_shapes</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>nb_shapes</declname>
        </param>
        <param>
          <type>const std::vector&lt; double2 &gt; &amp;</type>
          <declname>delta_gtos</declname>
        </param>
        <param>
          <type>const std::vector&lt; double &gt; &amp;</type>
          <declname>radius_shapes</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta_body_init</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>double</type>
          <declname>moi</declname>
        </param>
        <briefdescription>
<para>Constructor for the <ref refid="struct_agent" kindref="compound">Agent</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ID</parametername>
</parameternamelist>
<parameterdescription>
<para>The ID of the agent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Ids_shapes</parametername>
</parameternamelist>
<parameterdescription>
<para>The Ids of the shapes </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_shapes</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of shapes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta_gtos</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector the shapes&apos; positions relative to the agent&apos;s center of mass. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>radius_shapes</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of shape radii. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta_body_init</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial orientation of the agent&apos;s body. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mass</parametername>
</parameternamelist>
<parameterdescription>
<para>The mass of the agent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>moi</parametername>
</parameternamelist>
<parameterdescription>
<para>The moment of inertia of the agent. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="72" column="5" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/src/Agent.cpp" bodystart="80" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="struct_agent_1ab8dd8d152605cf1339fed595376e83cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Agent::~Agent</definition>
        <argsstring>()</argsstring>
        <name>~Agent</name>
        <qualifiedname>Agent::~Agent</qualifiedname>
        <briefdescription>
<para>Destructor for the <ref refid="struct_agent" kindref="compound">Agent</ref> class. </para>
        </briefdescription>
        <detaileddescription>
<para>This destructor is responsible for cleaning up any resources allocated by an <ref refid="struct_agent" kindref="compound">Agent</ref> object. It is automatically called when an <ref refid="struct_agent" kindref="compound">Agent</ref> object goes out of scope or is explicitly deleted. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="74" column="5"/>
      </memberdef>
      <memberdef kind="function" id="struct_agent_1a8213096130b009ee5d233d1e60d4442d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Agent::move</definition>
        <argsstring>()</argsstring>
        <name>move</name>
        <qualifiedname>Agent::move</qualifiedname>
        <briefdescription>
<para>Moves the agent based on its velocity and angular velocity. </para>
        </briefdescription>
        <detaileddescription>
<para>This function updates the position and orientation of the agent based on its current velocity (_vx, _vy) and angular velocity (_w). The movement is performed over a small time interval (dt). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="76" column="10" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/src/Agent.cpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="struct_agent_1a5407f025c5bd4bee36e134bb7ff86f6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double2</type>
        <definition>double2 Agent::get_r</definition>
        <argsstring>()</argsstring>
        <name>get_r</name>
        <qualifiedname>Agent::get_r</qualifiedname>
        <briefdescription>
<para>The method gets the current position of the agent. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The position in cartesian coordinates as a double2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="82" column="20" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="struct_agent_1a550e4f7aa2abaedb8b23735b14a9500a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double2</type>
        <definition>double2 Agent::get_v</definition>
        <argsstring>()</argsstring>
        <name>get_v</name>
        <qualifiedname>Agent::get_v</qualifiedname>
        <briefdescription>
<para>The method gets the current velocity of the agent. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The velocity in cartesian coordinates as a double2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="88" column="20" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="struct_agent_1a830bc76a5ef0ee8d42d46ec8fdcf0091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; double2 &gt;</type>
        <definition>vector&lt; double2 &gt; Agent::get_delta_gtos</definition>
        <argsstring>()</argsstring>
        <name>get_delta_gtos</name>
        <qualifiedname>Agent::get_delta_gtos</qualifiedname>
        <briefdescription>
<para>Calculates the current relative positions of the shapes. </para>
        </briefdescription>
        <detaileddescription>
<para>Based on the current orientation of the agent wrt the x-axis, this function gives the relative positions of the agent&apos;s shapes.</para>
<para><simplesect kind="return"><para>The updated relative positions of the shapes </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="89" column="17" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/src/Agent.cpp" bodystart="123" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class representing an agent in the simulation. </para>
    </briefdescription>
    <detaileddescription>
<para>This class defines the properties and behaviors of an agent, such as its position, velocity, and shape. Agents can interact with each other and navigate through the environment based on a driving force. </para>
    </detaileddescription>
    <location file="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" line="37" column="1" bodyfile="/Volumes/desk_oscar/main/cours/phd_first_year/shape_project/Shape/src/mechanical_layer/include/Agent.h" bodystart="44" bodyend="90"/>
    <listofallmembers>
      <member refid="struct_agent_1a0ca4ccfa41d290d7b9806a0738ad3982" prot="public" virt="non-virtual"><scope>Agent</scope><name>_delta_gtos</name></member>
      <member refid="struct_agent_1a453331e293cdc1f5df8ff6e89cde6def" prot="public" virt="non-virtual"><scope>Agent</scope><name>_id</name></member>
      <member refid="struct_agent_1a04ebfcac2b96192faed3ed25041441e2" prot="public" virt="non-virtual"><scope>Agent</scope><name>_ids_shapes</name></member>
      <member refid="struct_agent_1a574623159c00a0a641fb380a8d7cd312" prot="public" virt="non-virtual"><scope>Agent</scope><name>_mass</name></member>
      <member refid="struct_agent_1a7af4908964668300dceb0e97deeac933" prot="public" virt="non-virtual"><scope>Agent</scope><name>_moi</name></member>
      <member refid="struct_agent_1a78f7a7a1101569400fec08c8412ccfdf" prot="public" virt="non-virtual"><scope>Agent</scope><name>_nb_shapes</name></member>
      <member refid="struct_agent_1a0698b175835cd15775fc9ff16e4add19" prot="public" virt="non-virtual"><scope>Agent</scope><name>_neighbours</name></member>
      <member refid="struct_agent_1a9be8318728b4f24366501ef3aa22c60b" prot="public" virt="non-virtual"><scope>Agent</scope><name>_neighbours_walls</name></member>
      <member refid="struct_agent_1ac0f2bb8aa434e847f264bd8051bbdc62" prot="public" virt="non-virtual"><scope>Agent</scope><name>_radius</name></member>
      <member refid="struct_agent_1a569f4d3e9c12a902f30f116892381c4b" prot="public" virt="non-virtual"><scope>Agent</scope><name>_radius_shapes</name></member>
      <member refid="struct_agent_1aff31fb7e42339fb260af2a214d60a7a6" prot="public" virt="non-virtual"><scope>Agent</scope><name>_theta</name></member>
      <member refid="struct_agent_1a8bdb8ef4e124ca48217cc5e42ad157f7" prot="public" virt="non-virtual"><scope>Agent</scope><name>_theta_des</name></member>
      <member refid="struct_agent_1a7351fecebf368e76fa36139cc1e6b3ae" prot="public" virt="non-virtual"><scope>Agent</scope><name>_theta_init</name></member>
      <member refid="struct_agent_1a9489bdc6bf8961e95c9c33a145a317f0" prot="public" virt="non-virtual"><scope>Agent</scope><name>_v_des</name></member>
      <member refid="struct_agent_1a40d332f56eb301d0f2fd80933b6c2461" prot="public" virt="non-virtual"><scope>Agent</scope><name>_vx</name></member>
      <member refid="struct_agent_1ae33a1855f9a37f246968f5be5e3eaa06" prot="public" virt="non-virtual"><scope>Agent</scope><name>_vx_des</name></member>
      <member refid="struct_agent_1ac4f2ef64b18ede184af2774563de62d8" prot="public" virt="non-virtual"><scope>Agent</scope><name>_vy</name></member>
      <member refid="struct_agent_1ab93d8f0f443321392144eb8392c63baa" prot="public" virt="non-virtual"><scope>Agent</scope><name>_vy_des</name></member>
      <member refid="struct_agent_1af1487c7f179e334239593bb162bf5cd0" prot="public" virt="non-virtual"><scope>Agent</scope><name>_w</name></member>
      <member refid="struct_agent_1a9a22b9537f6f92ec7cd9c11b5bff5a5e" prot="public" virt="non-virtual"><scope>Agent</scope><name>_w_des</name></member>
      <member refid="struct_agent_1ae5fec6c2d045136730900c8fa2f1d6ee" prot="public" virt="non-virtual"><scope>Agent</scope><name>_x</name></member>
      <member refid="struct_agent_1a90bb0e29f517c3775a82b8ef3c15a37f" prot="public" virt="non-virtual"><scope>Agent</scope><name>_y</name></member>
      <member refid="struct_agent_1a63914b2d78836a941fcf53047d71ed29" prot="public" virt="non-virtual"><scope>Agent</scope><name>Agent</name></member>
      <member refid="struct_agent_1a830bc76a5ef0ee8d42d46ec8fdcf0091" prot="public" virt="non-virtual"><scope>Agent</scope><name>get_delta_gtos</name></member>
      <member refid="struct_agent_1a5407f025c5bd4bee36e134bb7ff86f6a" prot="public" virt="non-virtual"><scope>Agent</scope><name>get_r</name></member>
      <member refid="struct_agent_1a550e4f7aa2abaedb8b23735b14a9500a" prot="public" virt="non-virtual"><scope>Agent</scope><name>get_v</name></member>
      <member refid="struct_agent_1a8213096130b009ee5d233d1e60d4442d" prot="public" virt="non-virtual"><scope>Agent</scope><name>move</name></member>
      <member refid="struct_agent_1ab8dd8d152605cf1339fed595376e83cb" prot="public" virt="non-virtual"><scope>Agent</scope><name>~Agent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
