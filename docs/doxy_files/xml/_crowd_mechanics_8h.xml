<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="_crowd_mechanics_8h" kind="file" language="C++">
    <compoundname>CrowdMechanics.h</compoundname>
    <includes refid="_crowd_8h" local="yes">Crowd.h</includes>
    <includes refid="_global_8h" local="yes">Global.h</includes>
    <includes refid="_input_static_8h" local="yes">InputStatic.h</includes>
    <includedby refid="_main_8cpp" local="yes">src/Main.cpp</includedby>
    <incdepgraph>
      <node id="18">
        <label>../3rdparty/tinyxml/tinyxml2.h</label>
      </node>
      <node id="6">
        <label>Agent.h</label>
        <link refid="_agent_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Crowd.h</label>
        <link refid="_crowd_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/CrowdMechanics.h</label>
        <link refid="_crowd_mechanics_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Global.h</label>
        <link refid="_global_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>InputStatic.h</label>
        <link refid="_input_static_8h_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>filesystem</label>
      </node>
      <node id="13">
        <label>fstream</label>
      </node>
      <node id="14">
        <label>iostream</label>
      </node>
      <node id="15">
        <label>iterator</label>
      </node>
      <node id="3">
        <label>list</label>
      </node>
      <node id="16">
        <label>map</label>
      </node>
      <node id="17">
        <label>sstream</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="9">
        <label>sys/stat.h</label>
      </node>
      <node id="7">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_crowd_mechanics_8h_1af0cbdcc0b75b9524e85d4e2ebcb8c558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CrowdMechanics</definition>
        <argsstring>(char **files)</argsstring>
        <name>CrowdMechanics</name>
        <param>
          <type>char **</type>
          <declname>files</declname>
        </param>
        <briefdescription>
<para>The main function of CrowdMechanics, and the only one to be called when used as a library. </para>
        </briefdescription>
        <detaileddescription>
<para>It reads static and dynamic XML files, stores everything and simulates the dynamics of the agents.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>files</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of file names. They should be given in a precise order:<itemizedlist>
<listitem><para>Parameters (directories, time step...)</para>
</listitem><listitem><para>Materials (with Young&apos;s modulus and the shear modulus</para>
</listitem><listitem><para>Geometry (obstacles)</para>
</listitem><listitem><para>Agents</para>
</listitem><listitem><para><ref refid="struct_agent" kindref="compound">Agent</ref> dynamics (current kinematics, and driving forces and torques)</para>
</listitem><listitem><para>(optional) <ref refid="struct_agent" kindref="compound">Agent</ref> interactions (the information about agent-to-agent and agent-to-obstacle contacts, if any, will be used.</para>
</listitem></itemizedlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>EXIT_SUCCESS if the program executed successfully. EXIT_FAILURE in case of issue(s) with any of the XML files&apos; contents </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/CrowdMechanics.h" line="14" column="9" bodyfile="src/Main.cpp" bodystart="41" bodyend="84" declfile="include/CrowdMechanics.h" declline="14" declcolumn="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Copyright<sp/>2025<sp/>&lt;Dufour<sp/>Oscar,<sp/>Maxime<sp/>Stappel,<sp/>Nicolas<sp/>Alexandre,<sp/>Institute<sp/>of<sp/>Light<sp/>and<sp/>Matter,<sp/>CNRS<sp/>UMR<sp/>5306&gt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_MECHANICAL_LAYER_INCLUDE_CROWDMECHANICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SRC_MECHANICAL_LAYER_INCLUDE_CROWDMECHANICS_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Crowd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InputStatic.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Main<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>extern<sp/>C<sp/>is<sp/>a<sp/>trick<sp/>for<sp/>Python<sp/>ctypes<sp/>to<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CrowdMechanics(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>files);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SRC_MECHANICAL_LAYER_INCLUDE_CROWDMECHANICS_H_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/CrowdMechanics.h"/>
  </compounddef>
</doxygen>
